sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageBox","sap/ui/core/Fragment","sap/ui/core/syncStyleClass","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/FilterType","sap/ui/core/library","sap/base/Log"],function(e,t,r,i,n,s,a,o,c){"use strict";function l(e,r){return new Promise(function(i,n){cadesplugin.async_spawn(function*(i){const n=yield cadesplugin.CreateObjectAsync("CAdESCOM.Store");yield n.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE,cadesplugin.CAPICOM_MY_STORE,cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);const s=yield n.Certificates;const a=yield s.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH,e);const o=yield a.Count;if(o===0){const r="Certificate not found: "+e;t.error(r);i[1](r)}const c=yield a.Item(1);const l=yield cadesplugin.CreateObjectAsync("CAdESCOM.CPSigner");yield l.propset_Certificate(c);yield l.propset_CheckCertificate(true);const u=yield cadesplugin.CreateObjectAsync("CAdESCOM.CadesSignedData");yield u.propset_Content(r);let d="";try{d=yield u.SignCades(l,cadesplugin.CADESCOM_CADES_BES)}catch(e){const r=cadesplugin.getLastError(e);t.error("Failed to create signature. Error: "+r);i[1](r)}yield n.Close();return i[0](d)},i,n)})}function u(e){return new Promise(function(r,i){cadesplugin.async_spawn(function*(r){const i=yield cadesplugin.CreateObjectAsync("CAdESCOM.CadesSignedData");try{yield i.VerifyCades(e,cadesplugin.CADESCOM_CADES_BES)}catch(e){const i=cadesplugin.getLastError(e);t.error("Failed to verify signature. Error: "+i);return r[1](i)}return r[0]()},r,i)})}function d(){return new Promise(function(e,r){cadesplugin.async_spawn(function*(e){try{const t=yield cadesplugin.CreateObjectAsync("CAdESCOM.Store");yield t.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE,cadesplugin.CAPICOM_MY_STORE,cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);const r=yield t.Certificates;const i=yield r.Count;const n=[];for(let e=1;e<=i;e++){const t=yield r.Item(e);n.push({SubjectName:yield t.SubjectName,Thumbprint:yield t.Thumbprint,ValidToDate:new Date(yield t.ValidToDate)})}e[0](n)}catch(r){const i=cadesplugin.getLastError(r);t.error("Failed to load certificates. Error: "+i);e[1](i)}},e,r)})}return e.extend("ui5.crypto.ui5cryptotest.controller.View1",{onInit:function(){},handleFileChange:async function(e){function t(e){return new Promise((t,r)=>{const i=new FileReader;i.readAsDataURL(e);i.onload=()=>t(i.result);i.onerror=e=>r(e)})}const r=await t(e.getParameter("files")[0]);const i=await this._askForCertificate();const n=this.getView();n.setBusy(true);let s;try{s=await l(i,r)}catch(e){c.error(e)}n.setBusy(false);n.getModel().setProperty("/target",s)},_askForCertificate:async function(){const e=this.getView().getModel().getProperty("/cert");if(e)return e;const t=await this._loadCertSelectDialog();t.setBusy(true);t.open();t.getModel().setProperty("/certs",await d());t.setBusy(false);return await new Promise((e,t)=>{this.resolveAskForCertificatePromise=e;this.rejectAskForCertificatePromise=t})},_loadCertSelectDialog:function(){const e=this.getView();const t=e.byId("CertSelectDialog");return t?Promise.resolve(t):r.load({id:e.getId(),name:"ui5.crypto.ui5cryptotest.fragment.CertSelectDialog",controller:this}).then(t=>{e.addDependent(t);i("sapUiSizeCompact",e,t);return t})},onCertSearch:function(e){const t=e.getParameter("value");e.getParameter("itemsBinding").filter(new n([new n("SubjectName",s.Contains,t),new n("Thumbprint",s.Contains,t)],false),a.Application)},onCertSelectDialogConfirm:function(e){const t=e.getParameter("selectedItem").getBindingContext().getObject("Thumbprint");this.getView().getModel().setProperty("/cert",t);this.resolveAskForCertificatePromise(t)},onCertSelectDialogCancel:function(){const e="Certificate not selected";t.error(e);this.rejectAskForCertificatePromise(e)},handleVerify:async function(){const e=this.getView();let t;e.setBusy(true);u(e.getModel().getProperty("/target")).then(()=>t=true,()=>t=false).finally(()=>{e.setBusy(false);const r=t?o.ValueState.Success:o.ValueState.Error;e.getModel().setProperty("/state",r)})}})});